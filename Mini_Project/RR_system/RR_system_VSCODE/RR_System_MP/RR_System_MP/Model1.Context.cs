//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RR_System_MP
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RR_systemEntities : DbContext
    {
        public RR_systemEntities()
            : base("name=RR_systemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admindetail> Admindetails { get; set; }
        public virtual DbSet<Ticket_Booking> Ticket_Booking { get; set; }
        public virtual DbSet<Ticket_Cancellation> Ticket_Cancellation { get; set; }
        public virtual DbSet<Traindetail> Traindetails { get; set; }
        public virtual DbSet<Userdetail> Userdetails { get; set; }
        public virtual DbSet<Class_price> Class_price { get; set; }
        public virtual DbSet<Seat_available> Seat_available { get; set; }
    
        public virtual int SeatAvl(Nullable<int> trainid, string @class)
        {
            var trainidParameter = trainid.HasValue ?
                new ObjectParameter("trainid", trainid) :
                new ObjectParameter("trainid", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SeatAvl", trainidParameter, classParameter);
        }
    
        public virtual int Seatcancelled(Nullable<int> trainid, string @class)
        {
            var trainidParameter = trainid.HasValue ?
                new ObjectParameter("trainid", trainid) :
                new ObjectParameter("trainid", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Seatcancelled", trainidParameter, classParameter);
        }
    
        public virtual int AddclassFair(Nullable<decimal> trainNo, Nullable<int> firstAcSeatsfare, Nullable<int> secAcSeatsfare, Nullable<int> sLSeatsfare)
        {
            var trainNoParameter = trainNo.HasValue ?
                new ObjectParameter("TrainNo", trainNo) :
                new ObjectParameter("TrainNo", typeof(decimal));
    
            var firstAcSeatsfareParameter = firstAcSeatsfare.HasValue ?
                new ObjectParameter("firstAcSeatsfare", firstAcSeatsfare) :
                new ObjectParameter("firstAcSeatsfare", typeof(int));
    
            var secAcSeatsfareParameter = secAcSeatsfare.HasValue ?
                new ObjectParameter("SecAcSeatsfare", secAcSeatsfare) :
                new ObjectParameter("SecAcSeatsfare", typeof(int));
    
            var sLSeatsfareParameter = sLSeatsfare.HasValue ?
                new ObjectParameter("SLSeatsfare", sLSeatsfare) :
                new ObjectParameter("SLSeatsfare", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddclassFair", trainNoParameter, firstAcSeatsfareParameter, secAcSeatsfareParameter, sLSeatsfareParameter);
        }
    
        public virtual int AddclassSeats(Nullable<decimal> trainID, Nullable<int> firstAcSeats, Nullable<int> secAcSeats, Nullable<int> sLSeats)
        {
            var trainIDParameter = trainID.HasValue ?
                new ObjectParameter("TrainID", trainID) :
                new ObjectParameter("TrainID", typeof(decimal));
    
            var firstAcSeatsParameter = firstAcSeats.HasValue ?
                new ObjectParameter("firstAcSeats", firstAcSeats) :
                new ObjectParameter("firstAcSeats", typeof(int));
    
            var secAcSeatsParameter = secAcSeats.HasValue ?
                new ObjectParameter("SecAcSeats", secAcSeats) :
                new ObjectParameter("SecAcSeats", typeof(int));
    
            var sLSeatsParameter = sLSeats.HasValue ?
                new ObjectParameter("SLSeats", sLSeats) :
                new ObjectParameter("SLSeats", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddclassSeats", trainIDParameter, firstAcSeatsParameter, secAcSeatsParameter, sLSeatsParameter);
        }
    
        public virtual int CancelTicket(Nullable<int> canId, Nullable<int> tnum, Nullable<int> train_id, Nullable<int> refund)
        {
            var canIdParameter = canId.HasValue ?
                new ObjectParameter("canId", canId) :
                new ObjectParameter("canId", typeof(int));
    
            var tnumParameter = tnum.HasValue ?
                new ObjectParameter("Tnum", tnum) :
                new ObjectParameter("Tnum", typeof(int));
    
            var train_idParameter = train_id.HasValue ?
                new ObjectParameter("train_id", train_id) :
                new ObjectParameter("train_id", typeof(int));
    
            var refundParameter = refund.HasValue ?
                new ObjectParameter("refund", refund) :
                new ObjectParameter("refund", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelTicket", canIdParameter, tnumParameter, train_idParameter, refundParameter);
        }
    }
}
